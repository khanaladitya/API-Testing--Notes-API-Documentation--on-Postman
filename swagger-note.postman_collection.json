{
	"info": {
		"_postman_id": "a289f5a4-d571-4c08-a5b5-34e4c8d1837c",
		"name": "swagger-note",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29004469",
		"_collection_link": "https://galactic-space-92498.postman.co/workspace/import-swagger-~6c5249ea-eca9-4cdc-aafc-22da8dba443e/collection/29004469-a289f5a4-d571-4c08-a5b5-34e4c8d1837c?action=share&source=collection_link&creator=29004469"
	},
	"item": [
		{
			"name": "health",
			"item": [
				{
					"name": "check health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}health-check",
							"host": [
								"{{url}}health-check"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "register",
			"item": [
				{
					"name": "register with invalid email id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" :  \"aditya\",\r\n    \"email\" : \"kk@@gamail.co\",\r\n    \"password\": \"{{password}}\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}users/register",
							"host": [
								"{{url}}users"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "register with empty email id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" :  \"aditya\",\r\n    \"email\" : \"\",\r\n    \"password\": \"{{password}}\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}users/register",
							"host": [
								"{{url}}users"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "register with empty password",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" :  \"aditya\",\r\n    \"email\" : \"{{e-mail}}\",\r\n    \"password\": \"\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}users/register",
							"host": [
								"{{url}}users"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "register with get request instead of post",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" :  \"aditya\",\r\n    \"email\" : \"{{e-mail}}\",\r\n    \"password\": \"{{password}}\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}users/register",
							"host": [
								"{{url}}users"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "register with empty payload body",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}users/register",
							"host": [
								"{{url}}users"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "register with incorrect url",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" :  \"aditya\",\r\n    \"email\" : \"{{e-mail}}\",\r\n    \"password\": \"{{password}}\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}users/register12",
							"host": [
								"{{url}}users"
							],
							"path": [
								"register12"
							]
						}
					},
					"response": []
				},
				{
					"name": "register with valid credential",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" :  \"aditya\",\r\n    \"email\" : \"{{e-mail}}\",\r\n    \"password\": \"{{password}}\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}users/register",
							"host": [
								"{{url}}users"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "register with already registered email id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" :  \"aditya\",\r\n    \"email\" : \"{{e-mail}}\",\r\n    \"password\": \"{{password}}\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}users/register",
							"host": [
								"{{url}}users"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "login",
			"item": [
				{
					"name": "login with incorrect email",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}users/login",
							"host": [
								"{{url}}users"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "login with incorrect password",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{e-mail}}\",\r\n    \"password\": \"incorrect123@\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}users/login",
							"host": [
								"{{url}}users"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "login with both incorrect",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"kkkk@gmail.com\",\r\n    \"password\": \"kjdadkjhaskdfhfkjhaskks3@\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}users/login",
							"host": [
								"{{url}}users"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "login with empty payload body",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}users/login",
							"host": [
								"{{url}}users"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "login with correct credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// jsonparsing\r",
									"const jsonparsing = pm.response.json()\r",
									"\r",
									"//store dynamic token on collection variable named token\r",
									"pm.collectionVariables.set(\"token\",jsonparsing.data.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{e-mail}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}users/login",
							"host": [
								"{{url}}users"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "create note",
			"item": [
				{
					"name": "create note",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let parsing = pm.response.json()\r",
									"\r",
									"pm.collectionVariables.set(\"noteid\",parsing.data.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"harrypotter\",\r\n    \"description\": \"this is harrypotter\",\r\n    \"category\": \"Home\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}notes",
							"host": [
								"{{url}}notes"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "get note by id",
			"item": [
				{
					"name": "get note by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}notes/{{noteid}}",
							"host": [
								"{{url}}notes"
							],
							"path": [
								"{{noteid}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "get all notes",
			"item": [
				{
					"name": "get all notes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}notes",
							"host": [
								"{{url}}notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "update existing note",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"{{noteid}}\",\r\n    \"title\": \"harrypotter\",\r\n    \"description\": \"finishing the notes\",\r\n    \"category\": \"Work\",\r\n    \"completed\": \"false\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}notes/{{noteid}}",
							"host": [
								"{{url}}notes"
							],
							"path": [
								"{{noteid}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "change password",
			"item": [
				{
					"name": "change password",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"currentPassword\": \"{{password}}\",\r\n    \"newPassword\": \"{{updatedpassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}users/change-password",
							"host": [
								"{{url}}users"
							],
							"path": [
								"change-password"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "logout",
			"item": [
				{
					"name": "logout",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}users/logout",
							"host": [
								"{{url}}users"
							],
							"path": [
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "login Copy",
			"item": [
				{
					"name": "login with correct credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// jsonparsing\r",
									"const jsonparsing = pm.response.json()\r",
									"\r",
									"//store dynamic token on collection variable named token\r",
									"pm.collectionVariables.set(\"token\",jsonparsing.data.token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{e-mail}}\",\r\n    \"password\": \"{{updatedpassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}users/login",
							"host": [
								"{{url}}users"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "delete",
			"item": [
				{
					"name": "delete valid account",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}users/delete-account",
							"host": [
								"{{url}}users"
							],
							"path": [
								"delete-account"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{token}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "x-auth-token",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://practice.expandtesting.com/notes/api/",
			"type": "string"
		},
		{
			"key": "password",
			"value": "aditya12345"
		},
		{
			"key": "e-mail",
			"value": "khanaladitya5@gmail.com"
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "noteid",
			"value": ""
		},
		{
			"key": "updatedpassword",
			"value": "aditya123"
		}
	]
}